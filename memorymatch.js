function initializeMemoryMatch(){const checkForMemoryMatch=()=>{const memoryGameContainers=document.querySelectorAll('.window-body .memory-game, .social-window-body .memory-game');memoryGameContainers.forEach(container=>{const windowBody=container.closest('.window-body, .social-window-body');if(!windowBody||windowBody.dataset.memorymatchInitialized)return;windowBody.dataset.memorymatchInitialized='true';console.log('Initializing memory match in window');const gameContainer=windowBody.querySelector('.memory-game');const winMessage=windowBody.querySelector('.win-message');const timerDisplay=windowBody.querySelector('.timer');const finalTimeDisplay=windowBody.querySelector('#final-time');const leaderboardDisplay=windowBody.querySelector('#leaderboard');let cards=[];let flippedCards=[];let matchedPairs=0;let time=0;let timerInterval=null;let currentGameId=null;let isTimerRunning=!1;const pokemonPairs=[{name:'fennekin',image:'https://south-boulevard.nekoweb.org/Images/fennekin.gif'},{name:'froakie',image:'https://south-boulevard.nekoweb.org/Images/froakie.gif'},{name:'chespin',image:'https://south-boulevard.nekoweb.org/Images/chespin.gif'},{name:'sycamore',image:'https://south-boulevard.nekoweb.org/Images/Professor_Sycamore_OD.png'},{name:'fennekin',image:'https://south-boulevard.nekoweb.org/Images/fennekin.gif'},{name:'froakie',image:'https://south-boulevard.nekoweb.org/Images/froakie.gif'},{name:'chespin',image:'https://south-boulevard.nekoweb.org/Images/chespin.gif'},{name:'sycamore',image:'https://south-boulevard.nekoweb.org/Images/Professor_Sycamore_OD.png'},];function shuffle(array){for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]]}
return array}
function createBoard(){if(!gameContainer)return;gameContainer.innerHTML='';cards=[];flippedCards=[];matchedPairs=0;if(winMessage)winMessage.style.display='none';time=0;if(timerDisplay)timerDisplay.textContent=`Time: ${time}s`;if(timerInterval){clearInterval(timerInterval);timerInterval=null}
isTimerRunning=!1;currentGameId=null;const shuffledPairs=shuffle([...pokemonPairs]);shuffledPairs.forEach((pokemon,index)=>{const card=document.createElement('div');card.classList.add('card');card.dataset.name=pokemon.name;card.innerHTML=`
                        <div class="card-front">
                            <img src="${pokemon.image}" alt="${pokemon.name}">
                        </div>
                        <div class="card-back"></div>
                    `;card.addEventListener('click',()=>flipCard(card));gameContainer.appendChild(card);cards.push(card)})}
function startTimer(){if(!isTimerRunning&&timerDisplay){isTimerRunning=!0;timerInterval=setInterval(()=>{time++;timerDisplay.textContent=`Time: ${time}s`},1000)}}
function flipCard(card){if(flippedCards.length<2&&!flippedCards.includes(card)&&!card.classList.contains('flipped')){if(flippedCards.length===0)startTimer();card.classList.add('flipped');flippedCards.push(card);if(flippedCards.length===2){setTimeout(checkMatch,1000)}}}
function checkMatch(){const[card1,card2]=flippedCards;if(card1.dataset.name===card2.dataset.name){matchedPairs++;if(matchedPairs===pokemonPairs.length/2){if(timerInterval){clearInterval(timerInterval);timerInterval=null;isTimerRunning=!1}
if(finalTimeDisplay)finalTimeDisplay.textContent=time;updateLeaderboard();if(winMessage)winMessage.style.display='block'}}else{card1.classList.remove('flipped');card2.classList.remove('flipped')}
flippedCards=[]}
function resetGame(){createBoard()}
function updateLeaderboard(){let leaderboard=JSON.parse(localStorage.getItem('memoryLeaderboard'))||[];const gameId=Date.now();currentGameId=gameId;leaderboard.push({name:'',time:time,id:gameId});leaderboard.sort((a,b)=>a.time-b.time);leaderboard=leaderboard.slice(0,3);localStorage.setItem('memoryLeaderboard',JSON.stringify(leaderboard));displayLeaderboard()}
function displayLeaderboard(){if(!leaderboardDisplay)return;const leaderboard=JSON.parse(localStorage.getItem('memoryLeaderboard'))||[];leaderboardDisplay.innerHTML='';leaderboard.forEach((entry,index)=>{const iconSrc={'Fennekin':'https://south-boulevard.nekoweb.org/Images/653MS6.png','Froakie':'https://south-boulevard.nekoweb.org/Images/656MS6.png','Chespin':'https://south-boulevard.nekoweb.org/Images/650MS6.png','Anonymous':''}[entry.name||'Anonymous'];const p=document.createElement('p');if(index===0)p.classList.add('highlight');p.innerHTML=`
                        ${index + 1}. 
                        ${iconSrc ? `<img src="${iconSrc}" alt="${entry.name || 'Anonymous'}" class="pokemon-icon">` : ''} 
                        ${entry.name || 'Anonymous'} - ${entry.time}s
                        ${index === 0 ? 'ðŸ¥‡' : ''}
                    `;leaderboardDisplay.appendChild(p)})}
function submitScore(){const nameSelect=windowBody.querySelector('#pokemon-name');const name=nameSelect?nameSelect.value:'';if(name&&currentGameId!==null){let leaderboard=JSON.parse(localStorage.getItem('memoryLeaderboard'))||[];const entryIndex=leaderboard.findIndex(entry=>entry.id===currentGameId);if(entryIndex!==-1){leaderboard[entryIndex].name=name;localStorage.setItem('memoryLeaderboard',JSON.stringify(leaderboard));displayLeaderboard()}}}
const submitButton=windowBody.querySelector('.win-message button');if(submitButton){submitButton.addEventListener('click',submitScore)}
const playAgainButton=windowBody.querySelectorAll('.win-message button')[1];if(playAgainButton){playAgainButton.addEventListener('click',resetGame)}
if(!window.memoryMatchFunctions){window.memoryMatchFunctions={}}
window.memoryMatchFunctions[windowBody.id||'default']={submitScore,resetGame};createBoard();displayLeaderboard();console.log('Memory match initialized successfully in window')})};checkForMemoryMatch();setInterval(checkForMemoryMatch,1000)}
if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',initializeMemoryMatch)}else{initializeMemoryMatch()}
function submitScore(){const activeWindow=document.querySelector('.window-body[data-memorymatch-initialized], .social-window-body[data-memorymatch-initialized]');if(activeWindow&&window.memoryMatchFunctions){const windowId=activeWindow.id||'default';if(window.memoryMatchFunctions[windowId]){window.memoryMatchFunctions[windowId].submitScore()}}}
function resetGame(){const activeWindow=document.querySelector('.window-body[data-memorymatch-initialized], .social-window-body[data-memorymatch-initialized]');if(activeWindow&&window.memoryMatchFunctions){const windowId=activeWindow.id||'default';if(window.memoryMatchFunctions[windowId]){window.memoryMatchFunctions[windowId].resetGame()}}}